#####################################################################
# Builder
#####################################################################

FROM python:3.8.0-alpine as builder

WORKDIR  /usr/src/app

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# Install Postgres dependencies.
RUN apk update \
    && apk add postgresql-dev gcc python3-dev musl-dev

# Lint.
RUN pip install --upgrade pip
RUN pip install flake8
COPY . /usr/src/app/
RUN flake8 --ignore=E501,F401 .

# Install dependencies. 
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt

#####################################################################
# Final
#####################################################################

FROM python:3.8.0-alpine

RUN mkdir -p /home/app

# Create app user.
RUN addgroup -S app && adduser -S app -G app

# Create appropriate directories. 
ENV HOME=/home/app
ENV APP_HOME=/home/app/backend
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/staticfiles
WORKDIR $APP_HOME


# Install dependencies.
RUN apk update && apk add libpq 
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
RUN pip install --upgrade pip
RUN pip install --no-cache /wheels/*

# Copy entrypoint.
COPY ./entrypoint.prod.sh $APP_HOME

# Copy project.
COPY . $APP_HOME

# chown all files that contain in application folder.
RUN chown -R app:app $APP_HOME

# Change to the app user.
USER app 

ENTRYPOINT [ "/home/app/backend/entrypoint.prod.sh" ]

